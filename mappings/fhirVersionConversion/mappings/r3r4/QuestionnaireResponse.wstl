package fhir_r3r4

import "../ResourceBase.wstl"

def QuestionnaireResponseBase(questionnaireResponse) {
  resourcebase::ResourceBase(questionnaireResponse)
  identifier: questionnaireResponse.identifier
  authored: questionnaireResponse.authored
}

def R3QuestionnaireResponseToR4(questionnaireResponse) {
  QuestionnaireResponseBase(questionnaireResponse)
  contained: datatypes::R3ResourceToR4(questionnaireResponse.contained[])
  subject: datatypes::R3ReferenceToR4(questionnaireResponse.subject)
  basedOn: datatypes::R3ReferenceToR4(questionnaireResponse.basedOn[])
  partOf: datatypes::R3ReferenceToR4(questionnaireResponse.parent[])
  questionnaire: datatypes::ReferenceToCanonical(questionnaireResponse.questionnaire)
  status: questionnaireResponse.status
  encounter: datatypes::R3ReferenceToR4(questionnaireResponse.context)
  author: datatypes::R3ReferenceToR4(questionnaireResponse.author)
  source: datatypes::R3ReferenceToR4(questionnaireResponse.source)
  item: R3QuestionnaireResponse_ItemToR4(questionnaireResponse.item[])
}

def R4QuestionnaireResponseToR3(questionnaireResponse) {
  QuestionnaireResponseBase(questionnaireResponse)
  contained: datatypes::R4ResourceToR3(questionnaireResponse.contained[])
  subject: datatypes::R4ReferenceToR3(questionnaireResponse.subject)
  basedOn: datatypes::R4ReferenceToR3(questionnaireResponse.basedOn[])
  parent: datatypes::R4ReferenceToR3(questionnaireResponse.partOf[])
  questionnaire: datatypes::CanonicalToReference(questionnaireResponse.questionnaire)
  status: questionnaireResponse.status
  context: datatypes::R4ReferenceToR3(questionnaireResponse.encounter)
  author: datatypes::R4ReferenceToR3(questionnaireResponse.author)
  source: datatypes::R4ReferenceToR3(questionnaireResponse.source)
  item: R4QuestionnaireResponse_ItemToR3(questionnaireResponse.item[])
}

def R3QuestionnaireResponse_ItemToR4(data) {
  linkId: data.linkId
  definition: data.definition
  text: data.text
  answer: R3QuestionnaireResponse_Item_AnswerToR4(data.answer[])
  item: data.item
  extension[]: extension::BuildReferenceExtension("https://www.hl7.org/fhir/STU3/questionnaireresponse-definitions.html#QuestionnaireResponse.item.subject", data.subject)
}

def R4QuestionnaireResponse_ItemToR3(data) {
  linkId: data.linkId
  definition: data.definition
  text: data.text
  subject: extension::fetchReference("https://www.hl7.org/fhir/STU3/questionnaireresponse-definitions.html#QuestionnaireResponse.item.subject", data.extension)
  answer: R4QuestionnaireResponse_Item_AnswerToR3(data.answer[])
  item: data.item
}

def R3QuestionnaireResponse_Item_AnswerToR4(data) {
  valueBoolean: data.valueBoolean
  valueDecimal: data.valueDecimal
  valueInteger: data.valueInteger
  valueDate: data.valueDate
  valueDateTime: data.valueDateTime
  valueTime: data.valueTime
  valueString: data.valueString
  valueUri: data.valueUri
  valueAttachment: data.valueAttachment
  valueCoding: data.valueCoding
  valueQuantity: data.valueQuantity
  valueReference: datatypes::R3ReferenceToR4(data.valueReference)
  item: data.item
}

def R4QuestionnaireResponse_Item_AnswerToR3(data) {
  valueBoolean: data.valueBoolean
  valueDecimal: data.valueDecimal
  valueInteger: data.valueInteger
  valueDate: data.valueDate
  valueDateTime: data.valueDateTime
  valueTime: data.valueTime
  valueString: data.valueString
  valueUri: data.valueUri
  valueAttachment: data.valueAttachment
  valueCoding: data.valueCoding
  valueQuantity: data.valueQuantity
  valueReference: datatypes::R4ReferenceToR3(data.valueReference)
  item: data.item
}
