package fhir_r2r3

import "../ResourceBase.wstl"

def OrganizationBase(organization) {
  resourcebase::ResourceBase(organization)
  identifier: organization.identifier
  active: organization.active
  name: organization.name
  telecom: organization.telecom
  address: organization.address
  contact: organization.contact
}

def R2OrganizationToR3(organization) {
  OrganizationBase(organization)
  contained: datatypes::R2ResourceToR3(organization.contained[])
  partOf: datatypes::R2ReferenceToR3(organization.partOf)
  type: R2Organization_TypeToR3("https://www.hl7.org/fhir/STU3/organization-definitions.html#Organization.type", organization.extension, organization.type)
  alias: extension::fetchStringArray("https://www.hl7.org/fhir/STU3/organization-definitions.html#Organization.alias", organization.extension)
  endpoint: extension::fetchReferenceArray("https://www.hl7.org/fhir/STU3/organization-definitions.html#Organization.endpoint", organization.extension)
}

def R3OrganizationToR2(organization) {
  OrganizationBase(organization)
  contained: datatypes::R3ResourceToR2(organization.contained[])
  partOf: datatypes::R3ReferenceToR2(organization.partOf)
  type: organization.type[0]
  extension[]: extension::BuildCodeableConceptExtension("https://www.hl7.org/fhir/STU3/organization-definitions.html#Organization.type", organization.type[])
  extension[]: extension::BuildStringExtension("https://www.hl7.org/fhir/STU3/organization-definitions.html#Organization.alias", organization.alias[])
  extension[]: extension::BuildReferenceExtension("https://www.hl7.org/fhir/STU3/organization-definitions.html#Organization.endpoint", organization.endpoint[])
}

def R2Organization_TypeToR3(url, extension, data) {
  var type: extension::fetchCodeableConceptArray(url, extension)
  if type then {
    type
  } else {
    arrayOf(data)
  }
}
