package fhir_r2r3

import "../ResourceBase.wstl"

def RiskAssessmentBase(riskAssessment) {
  resourcebase::ResourceBase(riskAssessment)
  identifier: riskAssessment.identifier
  method: riskAssessment.method
  basis: riskAssessment.basis
  mitigation: riskAssessment.mitigation
}

def R2RiskAssessmentToR3(riskAssessment) {
  RiskAssessmentBase(riskAssessment)
  contained: datatypes::R2ResourceToR3(riskAssessment.contained[])
  condition: datatypes::R2ReferenceToR3(riskAssessment.condition)
  performer: datatypes::R2ReferenceToR3(riskAssessment.performer)
  subject: datatypes::R2ReferenceToR3(riskAssessment.subject)
  basedOn: extension::fetchReference("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.basedOn", riskAssessment.extension)
  parent: extension::fetchReference("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.parent", riskAssessment.extension)
  var status: extension::fetchCode("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.status", riskAssessment.extension)
  status: if status? then status else riskAssessment.status
  code: extension::fetchCodeableConcept("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.code", riskAssessment.extension)
  context: datatypes::R2ReferenceToR3(riskAssessment.encounter)
  occurrenceDateTime: riskAssessment.date
  occurrencePeriod: extension::fetchPeriod("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.occurrencePeriod", riskAssessment.extension)
  reasonCodeableConcept: extension::fetchCodeableConcept("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.reasonCodeableConcept", riskAssessment.extension)
  reasonReference: extension::fetchReference("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.reasonReference", riskAssessment.extension)
  prediction: R2RiskAssessment_PredictionToR3(riskAssessment.prediction[])
  comment: extension::fetchString("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.comment", riskAssessment.extension)
}

def R3RiskAssessmentToR2(riskAssessment) {
  RiskAssessmentBase(riskAssessment)
  contained: datatypes::R3ResourceToR2(riskAssessment.contained[])
  condition: datatypes::R3ReferenceToR2(riskAssessment.condition)
  performer: datatypes::R3ReferenceToR2(riskAssessment.performer)
  subject: datatypes::R3ReferenceToR2(riskAssessment.subject)
  encounter: datatypes::R3ReferenceToR2(riskAssessment.context)
  prediction: R3RiskAssessment_PredictionToR2(riskAssessment.prediction[])
  date: riskAssessment.occurrenceDateTime
  extension[]: extension::BuildReferenceExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.basedOn", riskAssessment.basedOn)
  extension[]: extension::BuildReferenceExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.parent", riskAssessment.parent)
  extension[]: extension::BuildCodeExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.status", riskAssessment.status)
  extension[]: extension::BuildCodeableConceptExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.code", riskAssessment.code)
  extension[]: extension::BuildPeriodExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.occurrencePeriod", riskAssessment.occurrencePeriod)
  extension[]: extension::BuildCodeableConceptExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.reasonCodeableConcept", riskAssessment.reasonCodeableConcept)
  extension[]: extension::BuildReferenceExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.reasonReference", riskAssessment.reasonReference)
  extension[]: extension::BuildStringExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.comment", riskAssessment.comment)
}

def R2RiskAssessment_PredictionToR3(data) {
  outcome: data.outcome
  probabilityDecimal: data.probabilityDecimal
  probabilityRange: data.probabilityRange
  qualitativeRisk: extension::fetchCodeableConcept("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.prediction.qualitativeRisk", data.extension)
  relativeRisk: data.relativeRisk
  whenPeriod: data.whenPeriod
  whenRange: data.whenRange
  rationale: data.rationale
  extension[]: extension::BuildCodeableConceptExtension("https://www.hl7.org/fhir/DSTU2/riskassessment-definitions.html#RiskAssessment.prediction.probabilityCodeableConcept", data.probabilityCodeableConcept)
}

def R3RiskAssessment_PredictionToR2(data) {
  outcome: data.outcome
  probabilityDecimal: data.probabilityDecimal
  probabilityRange: data.probabilityRange
  probabilityCodeableConcept: extension::fetchCodeableConcept("https://www.hl7.org/fhir/DSTU2/riskassessment-definitions.html#RiskAssessment.prediction.probabilityCodeableConcept", data.extension)
  extension[]: extension::BuildCodeableConceptExtension("https://www.hl7.org/fhir/STU3/riskassessment-definitions.html#RiskAssessment.prediction.qualitativeRisk", data.qualitativeRisk)
  relativeRisk: data.relativeRisk
  whenPeriod: data.whenPeriod
  whenRange: data.whenRange
  rationale: data.rationale
}
