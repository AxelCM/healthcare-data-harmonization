import "test"
import "class://com.google.cloud.verticals.foundations.dataharmonization.plugins.reconciliation.ReconciliationPlugin"
import "../../utilities/reconciliation/matching.wstl"
import "../../matching/AllergyIntolerance/matching-rules.wstl"
import "../../matching/Condition/matching-rules.wstl"
import "../../matching/Device/matching-rules.wstl"
import "../../matching/DiagnosticReport/matching-rules.wstl"
import "../../matching/Encounter/matching-rules.wstl"
import "../../matching/Immunization/matching-rules.wstl"
import "../../matching/Location/matching-rules.wstl"
import "../../matching/MedicationRequest/matching-rules.wstl"
import "../../matching/Observation/matching-rules.wstl"
import "../../matching/Organization/matching-rules.wstl"
import "../../matching/Patient/matching-rules.wstl"
import "../../matching/Practitioner/matching-rules.wstl"
import "../../matching/Procedure/matching-rules.wstl"

test::runAll()

// Tests matching-rules for AllergyIntolerance.
def test_match_AllergyIntolerance() testMatching("AllergyIntolerance")

// Tests matching-rules for Condition.
def test_match_Condition() testMatching("Condition")

// Tests matching-rules for Device.
def test_match_Device() testMatching("Device")

// Tests matching-rules for DiagnosticReport.
def test_match_DiagnosticReport() testMatching("DiagnosticReport")

// Tests matching-rules for Encounter.
def test_match_Encounter() testMatching("Encounter")

// Tests matching-rules for Immunization.
def test_match_Immunization() testMatching("Immunization")

// Tests matching-rules for Location.
def test_match_Location() testMatching("Location")

// Tests matching-rules for MedicationRequest.
def test_match_MedicationRequest() testMatching("MedicationRequest")

// Tests matching-rules for Observation.
def test_match_Observation() testMatching("Observation")

// Tests matching-rules for Organization.
def test_match_Organization() testMatching("Organization")

// Tests matching-rules for Patient.
def test_match_Patient() testMatching("Patient")

// Tests matching-rules for Practitioner.
def test_match_Practitioner() testMatching("Practitioner")

// Tests matching-rules for Procedure.
def test_match_Procedure() testMatching("Procedure")

// Generic function for testing matching configurations in the
// reconciliation package based on the resourceType.
def testMatching(resourceType) {
  var config: getMatchingConfig(resourceType);
  var input: loadJson(joinPath(testdir(), "{resourceType}.input.json"))
  var expectedOutput: loadJson(joinPath(testdir(), "{resourceType}.output.json"))
  var actualOutput: recon::extractPropertyValues(config, input.resources[])
  test::assertEquals(serializeJson(expectedOutput), serializeJson(actualOutput))
}

def getAllMatchingConfigs() {
  AllergyIntolerance: AllergyIntoleranceConfig()
  Condition: ConditionConfig()
  Device: DeviceConfig()
  DiagnosticReport: DiagnosticReportConfig()
  Encounter: EncounterConfig()
  Immunization: ImmunizationConfig()
  Location: LocationConfig()
  MedicationRequest: MedicationRequestConfig()
  Observation: ObservationConfig()
  Organization: OrganizationConfig()
  Patient: PatientConfig()
  Practitioner: PractitionerConfig()
  Procedure: ProcedureConfig()
}

def getMatchingConfig(resourceType) get(GetAllMatchingConfigs(), resourceType)

// Path for input and output files.
def testdir() "./matching/"